az storage account list --output table

storageAccountName="YourStorageAccountName"
containerName="YourContainerName"

storageAccountKey=$(az storage account keys list --account-name $storageAccountName --query '[0].value' --output tsv)

az storage container list --account-name $storageAccountName --account-key $storageAccountKey --output table

az storage blob list --container-name $containerName --account-name $storageAccountName --account-key $storageAccountKey --output table


jeff [ ~ ]$ ./DeployNessusToVMs.sh 
+ command -v jq
+ command -v curl
+ storageAccountName=azagentdeploy001
+ storageContainerName=scripts
+ allowed_vms_csv=AzureVirtualMachines.csv
+ local_csv_path=/tmp/AzureVirtualMachines.csv
+ management_subscription=b56097b7-e22e-46fc-92b9-da53cb50cb23
+ echo 'Switching to subscription: b56097b7-e22e-46fc-92b9-da53cb50cb23'
Switching to subscription: b56097b7-e22e-46fc-92b9-da53cb50cb23
+ az account set --subscription b56097b7-e22e-46fc-92b9-da53cb50cb23
+ echo 'Temporarily allowing access from all networks to the storage account'
Temporarily allowing access from all networks to the storage account
+ az storage account update --name azagentdeploy001 --resource-group rg-inf-scripts-001 --default-action Allow
{
  "accessTier": "Hot",
  "accountMigrationInProgress": null,
  "allowBlobPublicAccess": false,
  "allowCrossTenantReplication": false,
  "allowSharedKeyAccess": true,
  "allowedCopyScope": null,
  "azureFilesIdentityBasedAuthentication": null,
  "blobRestoreStatus": null,
  "creationTime": "2024-06-24T20:18:29.238123+00:00",
  "customDomain": null,
  "defaultToOAuthAuthentication": null,
  "dnsEndpointType": null,
  "enableHttpsTrafficOnly": true,
  "enableNfsV3": null,
  "encryption": {
    "encryptionIdentity": null,
    "keySource": "Microsoft.Storage",
    "keyVaultProperties": null,
    "requireInfrastructureEncryption": false,
    "services": {
      "blob": {
        "enabled": true,
        "keyType": "Account",
        "lastEnabledTime": "2024-06-24T20:18:29.316249+00:00"
      },
      "file": {
        "enabled": true,
        "keyType": "Account",
        "lastEnabledTime": "2024-06-24T20:18:29.316249+00:00"
      },
      "queue": null,
      "table": null
    }
  },
  "extendedLocation": null,
  "failoverInProgress": null,
  "geoReplicationStats": null,
  "id": "/subscriptions/b56097b7-e22e-46fc-92b9-da53cb50cb23/resourceGroups/rg-inf-scripts-001/providers/Microsoft.Storage/storageAccounts/azagentdeploy001",
  "identity": null,
  "immutableStorageWithVersioning": null,
  "isHnsEnabled": null,
  "isLocalUserEnabled": null,
  "isSftpEnabled": null,
  "isSkuConversionBlocked": null,
  "keyCreationTime": {
    "key1": "2024-06-24T20:18:29.316249+00:00",
    "key2": "2024-06-24T20:18:29.316249+00:00"
  },
  "keyPolicy": null,
  "kind": "StorageV2",
  "largeFileSharesState": "Enabled",
  "lastGeoFailoverTime": null,
  "location": "usgovvirginia",
  "minimumTlsVersion": "TLS1_2",
  "name": "azagentdeploy001",
  "networkRuleSet": {
    "bypass": "AzureServices",
    "defaultAction": "Allow",
    "ipRules": [
      {
        "action": "Allow",
        "ipAddressOrRange": "136.226.38.121"
      }
    ],
    "ipv6Rules": [],
    "resourceAccessRules": [],
    "virtualNetworkRules": []
  },
  "primaryEndpoints": {
    "blob": "https://azagentdeploy001.blob.core.usgovcloudapi.net/",
    "dfs": "https://azagentdeploy001.dfs.core.usgovcloudapi.net/",
    "file": "https://azagentdeploy001.file.core.usgovcloudapi.net/",
    "internetEndpoints": null,
    "microsoftEndpoints": null,
    "queue": "https://azagentdeploy001.queue.core.usgovcloudapi.net/",
    "table": "https://azagentdeploy001.table.core.usgovcloudapi.net/",
    "web": "https://azagentdeploy001.z2.web.core.usgovcloudapi.net/"
  },
  "primaryLocation": "usgovvirginia",
  "privateEndpointConnections": [],
  "provisioningState": "Succeeded",
  "publicNetworkAccess": "Enabled",
  "resourceGroup": "rg-inf-scripts-001",
  "routingPreference": null,
  "sasPolicy": null,
  "secondaryEndpoints": null,
  "secondaryLocation": null,
  "sku": {
    "name": "Standard_LRS",
    "tier": "Standard"
  },
  "statusOfPrimary": "available",
  "statusOfSecondary": null,
  "storageAccountSkuConversionStatus": null,
  "tags": {},
  "type": "Microsoft.Storage/storageAccounts"
}
+ echo 'Retrieving storage account key for: azagentdeploy001'
Retrieving storage account key for: azagentdeploy001
++ az storage account keys list --resource-group rg-inf-scripts-001 --account-name azagentdeploy001 --query '[0].value' --output tsv
WARNING: [Warning] This output may compromise security by showing secrets. Learn more at: https://go.microsoft.com/fwlink/?linkid=2258669
+ echo 'Storage account key retrieved successfully.'
Storage account key retrieved successfully.
+ export AZURE_STORAGE_ACCOUNT=azagentdeploy001
+ AZURE_STORAGE_ACCOUNT=azagentdeploy001
+ echo 'Generating SAS token for storage account.'
Generating SAS token for storage account.
+++ date -u -d '1 day' +%Y-%m-%dT%H:%MZ
++ az storage account generate-sas --account-name azagentdeploy001 --permissions rl --resource-types sco --services b --expiry 2024-06-27T00:53Z --output tsv
WARNING: [Warning] This output may compromise security by showing secrets. Learn more at: https://go.microsoft.com/fwlink/?linkid=2258669
+ sas_token='se=2024-06-27T00%3A53Z&sp=rl&sv=2022-11-02&ss=b&srt=sco&sig=qhX9U0VHjRaDTXNAl9skX%2BWgnoEZdqO4/69WC7GUv%2BA%3D'
+ '[' -z 'se=2024-06-27T00%3A53Z&sp=rl&sv=2022-11-02&ss=b&srt=sco&sig=qhX9U0VHjRaDTXNAl9skX%2BWgnoEZdqO4/69WC7GUv%2BA%3D' ']'
+ echo 'SAS token generated successfully.'
SAS token generated successfully.
+ blob_service_endpoint=https://azagentdeploy001.blob.core.usgovcloudapi.net
+ csv_url='https://azagentdeploy001.blob.core.usgovcloudapi.net/scripts/AzureVirtualMachines.csv?se=2024-06-27T00%3A53Z&sp=rl&sv=2022-11-02&ss=b&srt=sco&sig=qhX9U0VHjRaDTXNAl9skX%2BWgnoEZdqO4/69WC7GUv%2BA%3D'
+ echo 'Downloading CSV from URL: https://azagentdeploy001.blob.core.usgovcloudapi.net/scripts/AzureVirtualMachines.csv?se=2024-06-27T00%3A53Z&sp=rl&sv=2022-11-02&ss=b&srt=sco&sig=qhX9U0VHjRaDTXNAl9skX%2BWgnoEZdqO4/69WC7GUv%2BA%3D'
Downloading CSV from URL: https://azagentdeploy001.blob.core.usgovcloudapi.net/scripts/AzureVirtualMachines.csv?se=2024-06-27T00%3A53Z&sp=rl&sv=2022-11-02&ss=b&srt=sco&sig=qhX9U0VHjRaDTXNAl9skX%2BWgnoEZdqO4/69WC7GUv%2BA%3D
+ curl -o /tmp/AzureVirtualMachines.csv 'https://azagentdeploy001.blob.core.usgovcloudapi.net/scripts/AzureVirtualMachines.csv?se=2024-06-27T00%3A53Z&sp=rl&sv=2022-11-02&ss=b&srt=sco&sig=qhX9U0VHjRaDTXNAl9skX%2BWgnoEZdqO4/69WC7GUv%2BA%3D'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  1172  100  1172    0     0  19368      0 --:--:-- --:--:-- --:--:-- 19533
+ '[' '!' -f /tmp/AzureVirtualMachines.csv ']'
+ echo 'Content of downloaded CSV file:'
Content of downloaded CSV file:
+ cat /tmp/AzureVirtualMachines.csv
NAME,TYPE,SUBSCRIPTION,RESOURCE GROUP,LOCATION,STATUS,OPERATING SYSTEM,SIZE,PUBLIC IP ADDRESS,DISKS
vmbytrstjump01,Virtual machine,hii-mgmt-001,rg-mgmt-beyondtrst-001,USGov Virginia,Stopped (deallocated),Windows,Standard_B4ms,-,1
vmcnctjmpbx-001,Virtual machine,hii-cnct-001,rg-cnct-jmpbx-001,USGov Virginia,Running,Windows,Standard_D4s_v3,-,1
vmcnctjmpbx-002,Virtual machine,hii-cnct-001,rg-cnct-jmpbx-002,USGov Virginia,Stopped (deallocated),Windows,Standard_D4s_v3,-,1
vmstigtest-linux,Virtual machine,hii-inf-001,rg-inf-images-001,USGov Virginia,Running,Linux,Standard_D4s_v3,-,1
vmstigtest-windows,Virtual machine,hii-inf-001,rg-inf-images-001,USGov Virginia,Running,Windows,Standard_D4s_v3,-,1
vmsvcnow01,Virtual machine,hii-mgmt-001,rg-mgmt-svcnow-001,USGov Virginia,Running,Windows,Standard_D4s_v3,-,2
vmtenable01,Virtual machine,hii-mgmt-001,rg-mgmt-tenable-001,USGov Virginia,Running,Windows,Standard_D4s_v3,-,1
vmwinget001,Virtual machine,hii-mgmt-001,rg-intune-prod-001,USGov Virginia,Stopped (deallocated),Linux,Standard_B2s,-,1
vmwinpac001,Virtual machine,hii-mgmt-001,rg-mgmt-intune-001,USGov Virginia,Running,Linux,Standard_B2s,62.10.62.168,1
+ read_allowed_vms
+ allowed_vms=()
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ NAME != \N\A\M\E ]]
+ [[ NAME == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo NAME
++ xargs
++ echo SUBSCRIPTION
++ xargs
++ echo 'RESOURCE GROUP'
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmbytrstjump01 != \N\A\M\E ]]
+ [[ vmbytrstjump01 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo vmbytrstjump01
++ xargs
++ echo hii-mgmt-001
++ xargs
++ echo rg-mgmt-beyondtrst-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmcnctjmpbx-001 != \N\A\M\E ]]
+ [[ vmcnctjmpbx-001 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo vmcnctjmpbx-001
++ xargs
++ echo hii-cnct-001
++ xargs
++ echo rg-cnct-jmpbx-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmcnctjmpbx-002 != \N\A\M\E ]]
+ [[ vmcnctjmpbx-002 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ xargs
++ echo vmcnctjmpbx-002
++ echo hii-cnct-001
++ xargs
++ echo rg-cnct-jmpbx-002
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmstigtest-linux != \N\A\M\E ]]
+ [[ vmstigtest-linux == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo vmstigtest-linux
++ xargs
++ echo hii-inf-001
++ xargs
++ echo rg-inf-images-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmstigtest-windows != \N\A\M\E ]]
+ [[ vmstigtest-windows == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ xargs
++ echo vmstigtest-windows
++ echo hii-inf-001
++ xargs
++ echo rg-inf-images-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmsvcnow01 != \N\A\M\E ]]
+ [[ vmsvcnow01 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo vmsvcnow01
++ xargs
++ echo hii-mgmt-001
++ xargs
++ echo rg-mgmt-svcnow-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmtenable01 != \N\A\M\E ]]
+ [[ vmtenable01 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ xargs
++ echo vmtenable01
++ echo hii-mgmt-001
++ xargs
++ echo rg-mgmt-tenable-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmwinget001 != \N\A\M\E ]]
+ [[ vmwinget001 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo vmwinget001
++ xargs
++ echo hii-mgmt-001
++ xargs
++ echo rg-intune-prod-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ [[ vmwinpac001 != \N\A\M\E ]]
+ [[ vmwinpac001 == *\<\E\r\r\o\r\>* ]]
+ allowed_vms+=("$(echo "$name" | xargs),$(echo "$subscription" | xargs),$(echo "$resourceGroup" | xargs)")
++ echo vmwinpac001
++ xargs
++ echo hii-mgmt-001
++ xargs
++ echo rg-mgmt-intune-001
++ xargs
+ IFS=,
+ read -r name type subscription resourceGroup location status operatingSystem size publicIpAddress disks
+ nessusAgentWindows=NessusAgent-10.6.4-x64.msi
+ nessusAgentUbuntu=NessusAgent-10.6.4-ubuntu1404_amd64.deb
+ nessusAgentRHEL=NessusAgent-10.6.4-el8.x86_64.rpm
++ az account list --query '[?state=='\''Enabled'\''].id' -o tsv
+ subscriptions='5e2ccec2-02a9-481f-8a00-aa5440e574b3
b56097b7-e22e-46fc-92b9-da53cb50cb23
c38137e9-2c7c-4c88-bb0c-c7bfe6e1872b
29b04b2f-b64c-4792-890a-76d9617a18e1
4c437c4a-e51d-448e-a2d1-8ca3383bee8b
910857c3-85ff-44ba-be55-b4b3093cfdbe
b0844a47-03c6-4a40-8c24-aa62a617a936
dbef0776-721c-428b-bdc1-fa90085dbf6f
e873319e-be73-4ac2-a683-b2c291fc4767'
./DeployNessusToVMs.sh: line 238: syntax error in conditional expression
./DeployNessusToVMs.sh: line 239: syntax error near `then'
./DeployNessusToVMs.sh: line 239: `                    then'
